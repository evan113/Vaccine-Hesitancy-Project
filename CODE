title: "Vaccine Hesitancy Project"
author: "Evan Valdes"
date: "2023-01-03"
output: html_document
---

## Set working directory
```{r}
setwd("/Users/Evanvaldes1/Desktop/Vaccine Hesitancy Project")
```

## load in packages
```{r}
library(haven)
library(ggplot2)
library(ggstatsplot)
library(dplyr)
library(styler)
library(PerformanceAnalytics)
library(stargazer)
library(apaTables)
library(mediation)
library(tidyverse)
```

##______________________________________________________________________________
## DON'T NEED TO RUN ANY OF THIS ANYMORE - SEE BELOW FOR CODE
## load in SEPERATE COUNTRY DATA (NOT NECESSARY ANYMORE)
```{r}
USADATA <- read_sav("/Users/Evanvaldes1/Desktop/Vaccine Hesitancy Project/COUNTRY SPECIFIC RAW DATA/AASP+G-6+-+USA_January+12,+2023_21.24.zip")
CHDATA <- read_sav("/Users/Evanvaldes1/Desktop/Vaccine Hesitancy Project/COUNTRY SPECIFIC RAW DATA/AASP+G-6+-+CH_January+12,+2023_19.33.zip")
CHDATA2 <- read_sav("/Users/Evanvaldes1/Desktop/Vaccine Hesitancy Project/COUNTRY SPECIFIC RAW DATA/AASP+G-6+-+CH+-+Copy_February+12,+2023_15.51.zip")
PHDATA <- read_sav("/Users/Evanvaldes1/Desktop/Vaccine Hesitancy Project/COUNTRY SPECIFIC RAW DATA/AASP+G-6+PH_January+12,+2023_19.35.zip")
```

## MERGE BOTH CHINA DATASETS
```{r}
CHDATA <- bind_rows(CHDATA, CHDATA2)
```

## Creating Country variable in data
```{r}
CHDATA$Country = 1
PHDATA$Country = 2
USADATA$Country = 3
```

## vertical Merge data
## You need to do a vertical merge since it is two seperate groups
## that you are mergining - not matching participants via id
```{r}
CHDATA <- CHDATA[, -59:-60]
USADATA <- USADATA[,-19]
PHDATA <- PHDATA[,-59:-60]

## Making column name the same across CH / USA / PH
colnames(CHDATA)[53] = "CT"
colnames(USADATA)[53] = "CT"
colnames(PHDATA)[53] = "CT"

FULLDATA <- bind_rows(USADATA, CHDATA, PHDATA)

```

## Creating a subset version with only variables of interest
## Removing variables that are specific to qualtrics data
```{r}
FULLDATA <- FULLDATA[, -1:-8]
FULLDATA <- FULLDATA[, -2:-10]
```

## Reordering variables
```{r}
FULLDATA <- FULLDATA %>%
  select(ResponseId, Country, Age, Gender, Edu, everything())
```

## calculating average SJ scores for participants
```{r}
FULLDATA$SJ <- rowMeans(FULLDATA[ , 6:9], na.rm = T)
FULLDATA$SJ <- format(round(FULLDATA$SJ, 0), nsmall = 0)
```

## Calculating average trust in science score for participants
```{r}
FULLDATA$TRUSTSCIENCE <- rowMeans(FULLDATA[ , 36:39], na.rm = T)
FULLDATA$TRUSTSCIENCE <- format(round(FULLDATA$TRUSTSCIENCE, 0), nsmall = 0)
```


## Missing data analysis
## calculating NA's
## DONT RUN WHEN DOING CORRELATIONAL ANALYSIS - MICE OVERIDE FILTER FUNCTION
```{r}
missingdata <- subset(FULLDATA, select = c(
        "ResponseId","Country", "Age", "Gender", "Edu", "SJ_1", "SJ_2", "SJ_3", "SJ_4",
        "DV_sj_1", "DV_sj_2_1","SIT_1", "SIT_2", "SIT_3", "SIT_4", "SIT_5", "SIT_6",
        "SIT_7", "SIT_8", "SIT_9","SIT_10", "SIT_11_1", "SIT_11_2", "DV_si_1", "DV_si_2",
        "T_G_1", "T_G_2", "T_G_3", "T_H_1", "T_H_2", "T_H_3", "T_S_1", "T_S_2",
        "T_S_3", "T_S_4", "CT", "PI_1_1", "TRUSTSCIENCE"
))

missingdata$Age <- as.numeric(missingdata$Age)
missingdata$Gender <- as.factor(missingdata$Gender)
missingdata$Edu <- as.numeric(missingdata$Edu)
missingdata$PI_1_1 <- as.numeric(missingdata$PI_1_1)
missingdata$TRUSTSCIENCE <- as.numeric(missingdata$TRUSTSCIENCE)
missingdata$CT <- as.numeric(missingdata$CT)
missingdata$DV_si_1 <- as.numeric(missingdata$DV_si_1)
missingdata$DV_si_2 <- as.numeric(missingdata$DV_si_2)
missingdata$DV_sj_1 <- as.numeric(missingdata$DV_sj_1)
missingdata$DV_sj_2_1 <- as.numeric(missingdata$DV_sj_2_1)


SJ_vars = grep("SJ", names(missingdata), value = TRUE)
missingdata[,SJ_vars] = sapply(missingdata[,SJ_vars], as.numeric)

SIT_vars = grep("SIT", names(missingdata), value = TRUE)
missingdata[,SIT_vars] = sapply(missingdata[,SIT_vars], as.numeric)

TG_vars = grep("T_G", names(missingdata), value = TRUE)
missingdata[,TG_vars] = sapply(missingdata[,TG_vars], as.numeric)

TS_vars = grep("T_S", names(missingdata), value = TRUE)
missingdata[,TS_vars] = sapply(missingdata[,TS_vars], as.numeric)

library(mice)
library(misty)
library(tidyverse)

colSums(is.na(missingdata))

totalcells <- prod(dim(missingdata))
missingcells <- sum(is.na(missingdata))
percentage <- (missingcells * 100)/(totalcells)
percentage

## Identifying where data is missing
md.pattern(missingdata)

## Impute data function
imputed_data <- mice(missingdata, m=40, method = "rf", seed = 100)
summary(imputed_data)

options(scipen = 999)

stacked_imputed_data <- complete(imputed_data, "long", include = T)
finished_imputed_data <- complete(imputed_data, 4)
```

## Merging imputed with other variables not in imputation
```{r}
neededvars <- subset(FULLDATA, select = c(
        "ResponseId", "G_SI_Prime__1",
        "G_SI_Prime__2", "N_SI_Prime_1", "N_SI_Prime_2", "FL_21_DO_FL_24",
        "FL_21_DO_FL_26", "FL_31_DO_H_SJ", "FL_31_DO_L_SJ", "FL_27_DO_G_SI",
        "FL_27_DO_N_SI"
))

COMPLETEDDATA <- merge(finished_imputed_data, neededvars, by = "ResponseId", 
                       all = T)
```

## Creating new datafile to save into memory
## SPSS file
```{r}
write_sav(COMPLETEDDATA, "FULLDATA.sav")
```

##____________________________________________________________________________

## NOW USE THIS STARTING HERE ***
## LOAD IN multiply imputed DATA
```{r}
COMPLETEDDATA <- read_sav("~/Desktop/Vaccine Hesitancy Project/FULLDATA.sav")
```

## calculating SJ scores
```{r}
COMPLETEDDATA$SJ <- rowMeans(COMPLETEDDATA[ , 6:9], na.rm = T)
COMPLETEDDATA$SJ <- format(round(COMPLETEDDATA$SJ, 0), nsmall = 0)
COMPLETEDDATA$SJ <- as.numeric(COMPLETEDDATA$SJ)
```

## Calculating SIT scores
## Already did the reverse scoring 
```{r}
## Recode negatively keyed items 6-10
## Items 1-5 are positively keyed
## Calculate average 1-10 once 6-10 are reverse scored
COMPLETEDDATA$SIT_1 <- as.numeric(COMPLETEDDATA$SIT_1)
COMPLETEDDATA$SIT_2 <- as.numeric(COMPLETEDDATA$SIT_2)
COMPLETEDDATA$SIT_3 <- as.numeric(COMPLETEDDATA$SIT_3)
COMPLETEDDATA$SIT_4 <- as.numeric(COMPLETEDDATA$SIT_4)
COMPLETEDDATA$SIT_5 <- as.numeric(COMPLETEDDATA$SIT_5)
COMPLETEDDATA$SIT_6 <- as.numeric(COMPLETEDDATA$SIT_6)
COMPLETEDDATA$SIT_7 <- as.numeric(COMPLETEDDATA$SIT_7)
COMPLETEDDATA$SIT_8 <- as.numeric(COMPLETEDDATA$SIT_8)
COMPLETEDDATA$SIT_9 <- as.numeric(COMPLETEDDATA$SIT_9)
COMPLETEDDATA$SIT_10 <- as.numeric(COMPLETEDDATA$SIT_10)

COMPLETEDDATA$SIT_6 <- recode(COMPLETEDDATA$SIT_6,
                              "1" = 6, "2" = 5, "3" = 4, "4" = 3, "5" = 2, "6" = 1)
COMPLETEDDATA$SIT_7 <- recode(COMPLETEDDATA$SIT_7,
                              "1" = 6, "2" = 5, "3" = 4, "4" = 3, "5" = 2, "6" = 1)
COMPLETEDDATA$SIT_8 <- recode(COMPLETEDDATA$SIT_8,
                              "1" = 6, "2" = 5, "3" = 4, "4" = 3, "5" = 2, "6" = 1)
COMPLETEDDATA$SIT_9 <- recode(COMPLETEDDATA$SIT_9,
                              "1" = 6, "2" = 5, "3" = 4, "4" = 3, "5" = 2, "6" = 1)
COMPLETEDDATA$SIT_10 <- recode(COMPLETEDDATA$SIT_10,
                              "1" = 6, "2" = 5, "3" = 4, "4" = 3, "5" = 2, "6" = 1)

## Calculating average of all items in scale 
COMPLETEDDATA$SIT <- rowMeans(COMPLETEDDATA[ , 12:21], na.rm = T)
COMPLETEDDATA$SIT <- format(round(COMPLETEDDATA$SIT, 0), nsmall = 0)

COMPLETEDDATA$SIT <- as.numeric(COMPLETEDDATA$SIT)
```

## Calculating Trust items
```{r}
## Trust in healthcare
COMPLETEDDATA$TRUSTHEALTHCARE <- rowMeans(COMPLETEDDATA[ , 29:31], na.rm = T)
COMPLETEDDATA$TRUSTHEALTHCARE <- format(round(COMPLETEDDATA$TRUSTHEALTHCARE,
                                              0), nsmall = 0)
COMPLETEDDATA$TRUSTHEALTHCARE <- as.numeric(COMPLETEDDATA$TRUSTHEALTHCARE)

## Trust in government
COMPLETEDDATA$TRUSTGOVERNMENT <- rowMeans(COMPLETEDDATA[ , 26:28], na.rm = T)
COMPLETEDDATA$TRUSTGOVERNMENT <- format(round(COMPLETEDDATA$TRUSTGOVERNMENT,
                                              0), nsmall = 0)
COMPLETEDDATA$TRUSTGOVERNMENT <- as.numeric(
        COMPLETEDDATA$TRUSTGOVERNMENT
)

COMPLETEDDATA$TRUSTSCIENCE <- as.numeric(COMPLETEDDATA$TRUSTSCIENCE)

```
## Calculating national identification 
```{r}
COMPLETEDDATA$NATIONAL_IDENTIFCATION <- rowMeans(COMPLETEDDATA[ , 22:23], na.rm = T)
COMPLETEDDATA$NATIONAL_IDENTIFCATION <- format(round(COMPLETEDDATA$NATIONAL_IDENTIFCATION,
                                                     0), nsmall = 0)

COMPLETEDDATA$NATIONAL_IDENTIFCATION <- as.numeric(
        COMPLETEDDATA$NATIONAL_IDENTIFCATION
)
```

## Renaming country variable
```{r}
COMPLETEDDATA$Country <- as.character(COMPLETEDDATA$Country)

COMPLETEDDATA$Country[COMPLETEDDATA$Country == 1] <- "China"
COMPLETEDDATA$Country[COMPLETEDDATA$Country == 2] <- "Philippines"
COMPLETEDDATA$Country[COMPLETEDDATA$Country == 3] <- "USA"

## Making country a grouping variable
COMPLETEDDATA$Country <- as.factor(COMPLETEDDATA$Country)
```


## Calculating cronbach Alpha for all scales
```{r}
## SJ scale
library(ltm)
cronbachalphaSJ <- subset(COMPLETEDDATA,
                          select = c(SJ_1, SJ_2, SJ_3, SJ_4))

cronbach.alpha(cronbachalphaSJ, na.rm = T)

## SIT scale
cronbachalphaSIT <- subset(COMPLETEDDATA,
                           select = c(
                        SIT_1, SIT_2, SIT_3, SIT_4, SIT_5, SIT_6, SIT_7, SIT_8,
                        SIT_9, SIT_10
                           ))

cronbach.alpha(cronbachalphaSIT, na.rm = T)

## Trust in science scale
cronbachalphaSCIENCE <- subset(COMPLETEDDATA,
                               select = c(
                                       T_S_1, T_S_2, T_S_3, T_S_4
                               ))

cronbach.alpha(cronbachalphaSCIENCE, na.rm = T)

## Trust in health care scale
cronbachalphaHEALTH <- subset(COMPLETEDDATA,
                              select = c(
                                      T_H_1, T_H_2,T_H_3
                              ))

cronbach.alpha(cronbachalphaHEALTH, na.rm = T)

## Trust in government scale
cronbachalphaGOVERNMENT <- subset(COMPLETEDDATA, select = c(
        T_G_1, T_G_2, T_G_3
))

cronbach.alpha(cronbachalphaGOVERNMENT, na.rm = T)

## National identification
cronbachalphaNATID <- subset(COMPLETEDDATA, select = c(
        SIT_11_1, SIT_11_2
))

cronbach.alpha(cronbachalphaNATID, na.rm = T)
```

## Adding country-level moderator (Freedom)
## Data was exported from Freedomhouse
## Adding Freedom/Civil Liberty Scores (Larger scores indicate greater freedom)
```{r}
COMPLETEDDATA <- COMPLETEDDATA %>%
  mutate(Freedom = ifelse(Country == "China", 9,
    ifelse(Country == "Philippines", 55,
      ifelse(Country == "USA", 83,
        ""
      )
    )
  ))
```

## Seperate country datasets 
```{r}
SMALLCH <- filter(COMPLETEDDATA, Country == "China")

SMALLPH <- filter(COMPLETEDDATA, Country == "Philippines")

SMALLUS <- filter(COMPLETEDDATA, Country == "USA")
```

## Sample descriptive statistics
```{r}
library(tableone)
library(ggdag)
library(table1)


COMPLETEDDATA$Gender2 <- factor(COMPLETEDDATA$Gender, levels = c(1, 2, 3, 4),
                              labels = c("Male", "Female", "Non-Binary", "Prefer Not to Say"))

COMPLETEDDATA$Age <- as.numeric(COMPLETEDDATA$Age)

label(COMPLETEDDATA$Age) <- "Age"
label(COMPLETEDDATA$Gender2) <- "Gender"

## Creating descriptive table
summary(COMPLETEDDATA$Gender2)
mean(COMPLETEDDATA$Age, na.rm = T)
sd(COMPLETEDDATA$Age, na.rm = T)

attach(COMPLETEDDATA)
vars_for_table <- c("Age", "Gender2")

CreateTableOne(vars = vars_for_table, data = COMPLETEDDATA)
```

## Correlation Tables
```{r, warning=FALSE}
## FULLDATA Correlation
COMPLETEDDATA$SJ <- as.numeric(COMPLETEDDATA$SJ)
COMPLETEDDATA$SIT <- as.numeric(COMPLETEDDATA$SIT)
COMPLETEDDATA$Edu <- as.numeric(COMPLETEDDATA$Edu)
COMPLETEDDATA$CT <- as.numeric(COMPLETEDDATA$CT)
COMPLETEDDATA$PI_1_1 <- as.numeric(COMPLETEDDATA$PI_1_1)
COMPLETEDDATA$DV_sj_2_1 <- as.numeric(COMPLETEDDATA$DV_sj_2_1)
COMPLETEDDATA$DV_sj_1 <- as.numeric(COMPLETEDDATA$DV_sj_1)
COMPLETEDDATA$TRUSTSCIENCE <- as.numeric(COMPLETEDDATA$TRUSTSCIENCE)
COMPLETEDDATA$TRUSTGOVERNMENT <- as.numeric(COMPLETEDDATA$TRUSTGOVERNMENT)
COMPLETEDDATA$TRUSTHEALTHCARE <- as.numeric(COMPLETEDDATA$TRUSTHEALTHCARE)
COMPLETEDDATA$Freedom <- as.numeric(COMPLETEDDATA$Freedom)
COMPLETEDDATA$Age <- as.numeric(COMPLETEDDATA$Age)



fullcor <- subset(COMPLETEDDATA, select = c("DV_sj_1", "DV_si_2", "SJ", "SIT",
                                           "Edu", "CT", "TRUSTSCIENCE", 
                                       "TRUSTHEALTHCARE", "TRUSTGOVERNMENT",
                                        "PI_1_1", "Age", "Freedom"))

chart.Correlation(fullcor)


## CHINA correlation
SMALLCH$SJ <- as.numeric(SMALLCH$SJ)
SMALLCH$SIT <- as.numeric(SMALLCH$SIT)
SMALLCH$Edu <- as.numeric(SMALLCH$Edu)
SMALLCH$CT <- as.numeric(SMALLCH$CT)
SMALLCH$PI_1_1 <- as.numeric(SMALLCH$PI_1_1)
SMALLCH$DV_sj_2_1 <- as.numeric(SMALLCH$DV_sj_2_1)
SMALLCH$DV_sj_1 <- as.numeric(SMALLCH$DV_sj_1)
SMALLCH$TRUSTGOVERNMENT <- as.numeric(SMALLCH$TRUSTGOVERNMENT)
SMALLCH$TRUSTHEALTHCARE <- as.numeric(SMALLCH$TRUSTHEALTHCARE)
SMALLCH$TRUSTSCIENCE <- as.numeric(SMALLCH$TRUSTSCIENCE)
SMALLCH$NATIONAL_IDENTIFCATION <- as.numeric(SMALLCH$NATIONAL_IDENTIFCATION)
SMALLCH$Freedom <- as.numeric(SMALLCH$Freedom)
SMALLCH$Age <- as.numeric(SMALLCH$Age)

chinacor <- subset(SMALLCH, select = c("DV_sj_1", "DV_si_2", "SJ", "SIT",
                                           "Edu", "CT", "TRUSTSCIENCE", 
                                       "TRUSTHEALTHCARE", "TRUSTGOVERNMENT",
                                        "PI_1_1", "Age"))
chart.Correlation(chinacor)


## PHILIPPINES correlation
SMALLPH$SJ <- as.numeric(SMALLPH$SJ)
SMALLPH$SIT <- as.numeric(SMALLPH$SIT)
SMALLPH$Edu <- as.numeric(SMALLPH$Edu)
SMALLPH$CT <- as.numeric(SMALLPH$CT)
SMALLPH$PI_1_1 <- as.numeric(SMALLPH$PI_1_1)
SMALLPH$DV_sj_2_1 <- as.numeric(SMALLPH$DV_sj_2_1)
SMALLPH$DV_sj_1 <- as.numeric(SMALLPH$DV_sj_1)
SMALLPH$TRUSTGOVERNMENT <- as.numeric(SMALLPH$TRUSTGOVERNMENT)
SMALLPH$TRUSTHEALTHCARE <- as.numeric(SMALLPH$TRUSTHEALTHCARE)
SMALLPH$TRUSTSCIENCE <- as.numeric(SMALLPH$TRUSTSCIENCE)
SMALLPH$Age <- as.numeric(SMALLPH$Age)

philippinescor <- subset(SMALLPH, select = c("DV_si_1", "DV_si_2", "SJ", "SIT",
                                           "Edu", "CT", "TRUSTSCIENCE", 
                                       "TRUSTHEALTHCARE", "TRUSTGOVERNMENT",
                                        "PI_1_1", "Age"))
chart.Correlation(philippinescor)

## USA correlation
SMALLUS$SJ <- as.numeric(SMALLUS$SJ)
SMALLUS$SIT <- as.numeric(SMALLUS$SIT)
SMALLUS$Edu <- as.numeric(SMALLUS$Edu)
SMALLUS$CT <- as.numeric(SMALLUS$CT)
SMALLUS$PI_1_1 <- as.numeric(SMALLUS$PI_1_1)
SMALLUS$DV_sj_2_1 <- as.numeric(SMALLUS$DV_sj_2_1)
SMALLUS$DV_sj_1 <- as.numeric(SMALLUS$DV_sj_1)
SMALLUS$TRUSTGOVERNMENT <- as.numeric(SMALLUS$TRUSTGOVERNMENT)
SMALLUS$TRUSTHEALTHCARE <- as.numeric(SMALLUS$TRUSTHEALTHCARE)
SMALLUS$TRUSTSCIENCE <- as.numeric(SMALLUS$TRUSTSCIENCE)
SMALLUS$Age <- as.numeric(SMALLUS$Age)

usacor <- subset(SMALLUS, select = c("DV_si_1", "DV_si_2", "SJ", "SIT",
                                           "Edu", "CT", "TRUSTSCIENCE", 
                                       "TRUSTHEALTHCARE", "TRUSTGOVERNMENT",
                                        "PI_1_1", "Age"))
chart.Correlation(usacor)

```

## Writing cor table to doc for RG
```{r}
## full data cor
apa.cor.table(fullcor, filename = "Three-Country-Correlation.doc")

## China cor
apa.cor.table(chinacor, filename = "CHINACOR.doc")

## Philippines cor
apa.cor.table(philippinescor, filename = "PHILIPPINESCOR.doc")

## USA cor
apa.cor.table(usacor, filename = "USA.doc")
```

## HYPOTHESIS TESTING
```{r}
library(lme4)
library(sjPlot)
library(multilevel)

## Mediation model #1

## A path
mediate_model = lm(SJ ~ NATIONAL_IDENTIFCATION,
                   data = COMPLETEDDATA)
tab_model(mediate_model)

## B path
b_path = lm(CT ~ SJ + NATIONAL_IDENTIFCATION, data = COMPLETEDDATA)
tab_model(b_path)

## C path
c_path = lm(CT ~ NATIONAL_IDENTIFCATION, data = COMPLETEDDATA)
tab_model(c_path)

## fit whole model
full_model = lm(CT ~ SJ + NATIONAL_IDENTIFCATION, data = COMPLETEDDATA)

results = mediate(mediate_model, full_model, treat = "NATIONAL_IDENTIFCATION", 
                  mediator = "SJ", boot = TRUE, sims = 1000)
summary(results)

## Sobel test for mediation
sobel(COMPLETEDDATA$NATIONAL_IDENTIFCATION, COMPLETEDDATA$SJ,
      COMPLETEDDATA$CT)

## building table of mediational models
tab_model(mediate_model, b_path, c_path, file = "SJ_mediation.doc")

##  Mediation model #2
COMPLETEDDATA <- COMPLETEDDATA %>%
        mutate(AVG_TRUST = (TRUSTSCIENCE + TRUSTHEALTHCARE + 
                                    TRUSTGOVERNMENT)/3)


## Mediation model #2
mediate_model = lm(PI_1_1 ~ SIT, data = COMPLETEDDATA)
tab_model(mediate_model)

## b path
b_path <- lm(CT ~ SIT + PI_1_1, data = COMPLETEDDATA)
tab_model(b_path)

## c_path
c_path <- lm(CT ~ SIT, data = COMPLETEDDATA)
tab_model(c_path)

full_model <- lm(CT ~ PI_1_1 + SIT, data = COMPLETEDDATA)

results = mediate(mediate_model, full_model, treat = "SIT",
                  mediator = "PI_1_1", boot = T, sims = 1000)

summary(results)

## SOBEL TEST FOR MEDIATION MODEL #2
sobel(COMPLETEDDATA$SIT, COMPLETEDDATA$PI_1_1, COMPLETEDDATA$CT)

##Building table of mediational models
tab_model(mediate_model, b_path, c_path, file = "SIT_mediation.doc")

## 3 - ANOVA - high vs low system dependence 
## Creating categorical var for high vs low and national vs global vaccine dev

COMPLETEDDATA$FL_31_DO_L_SJ <- recode(COMPLETEDDATA$FL_31_DO_L_SJ,
                                      "1" = 2)

COMPLETEDDATA$SYSTEMDEPENDENCE[COMPLETEDDATA$FL_31_DO_H_SJ == "1"] <- "1" ## High
COMPLETEDDATA$SYSTEMDEPENDENCE[COMPLETEDDATA$FL_31_DO_L_SJ == "2"] <- "0" ## Low

COMPLETEDDATA$SYSTEMDEPENDENCE <- as.factor(COMPLETEDDATA$SYSTEMDEPENDENCE)

COMPLETEDDATA$VACCINEDEVELOPMENT[COMPLETEDDATA$FL_27_DO_N_SI == "1"] <- "1" ## National
COMPLETEDDATA$VACCINEDEVELOPMENT[COMPLETEDDATA$FL_27_DO_G_SI == "1"] <- "0" ## Global

COMPLETEDDATA$VACCINEDEVELOPMENT <- as.factor(COMPLETEDDATA$VACCINEDEVELOPMENT)

## T-test to see if there is a statistical difference between high vs low
t_data <- COMPLETEDDATA %>%
        select(SJ, SYSTEMDEPENDENCE) %>%
        drop_na(SYSTEMDEPENDENCE)

t.test(SJ~SYSTEMDEPENDENCE, data = t_data)

## T-test to see if there is a statistical difference between national vs global group
t_data2 <- COMPLETEDDATA %>%
        select(SIT, VACCINEDEVELOPMENT) %>%
        drop_na(VACCINEDEVELOPMENT)

t.test(SIT~VACCINEDEVELOPMENT, data = t_data2)

## EQUIVALENCE TESTING SINCE BOTH T-TESTS ARE NULL
library(TOSTER)

TOST.data1 <- t_data

dataTOSTtwo(
        data = TOST.data1,
        deps = SJ,
        group = SYSTEMDEPENDENCE,
        desc = T,
        plots = T
) 
## We can conclude based upon this equivalence test that
## the Dependent variable SJ is about the same in both groups


TOST.data2 <- t_data2

dataTOSTtwo(
        data = TOST.data2,
        deps = SIT,
        group = VACCINEDEVELOPMENT,
        desc = T,
        plots = T
)

library(psych)
library(reshape2)
library(Rmisc)
library(rstatix) ## factorial anova
#  ANOVA ANALYSIS
anovadata <- na.omit(COMPLETEDDATA[, c("ResponseId","Country", "SYSTEMDEPENDENCE", "SJ", 
                                       "DV_si_1", "DV_sj_1", "DV_sj_2_1")])

## Descriptives
summarySE(anovadata, groupvars = c("SYSTEMDEPENDENCE", "Country"),
          measurevar = "DV_si_1")

## ANOVA TESTS
anova_test(anovadata, DV_sj_1~SYSTEMDEPENDENCE*Country, wid = ResponseId, type = 3,
           effect.size = "pes")
anova_test(anovadata, DV_sj_2_1~SYSTEMDEPENDENCE*Country, wid = ResponseId,
           type = 3, effect.size = "pes")

## Tukey post-hoc tests
model1 <- lm(DV_sj_1~SYSTEMDEPENDENCE*Country, data = anovadata)
TukeyHSD(aov(model1), "Country", ordered = F)

model2 <- lm(DV_sj_2_1~SYSTEMDEPENDENCE*Country, data = anovadata)
TukeyHSD(aov(model2), "Country", ordered = F)

## Simple main effect
## Take the vaccine
anova_test(anovadata[anovadata$Country=="USA",], DV_sj_1~SYSTEMDEPENDENCE, 
           wid = ResponseId, type = 3, effect.size = "pes")
anova_test(anovadata[anovadata$Country=="China",], DV_sj_1~SYSTEMDEPENDENCE, 
           wid = ResponseId, type = 3, effect.size = "pes")
anova_test(anovadata[anovadata$Country=="Philippines",], DV_sj_1~SYSTEMDEPENDENCE, 
           wid = ResponseId, type = 3, effect.size = "pes")
## Vaccine safety
anova_test(anovadata[anovadata$Country=="USA",], DV_sj_2_1~SYSTEMDEPENDENCE, 
           wid = ResponseId, type = 3, effect.size = "pes")
anova_test(anovadata[anovadata$Country=="China",], DV_sj_2_1~SYSTEMDEPENDENCE, 
           wid = ResponseId, type = 3, effect.size = "pes")
anova_test(anovadata[anovadata$Country=="Philippines",], DV_sj_2_1~SYSTEMDEPENDENCE, 
           wid = ResponseId, type = 3, effect.size = "pes")

## 4 - ANOVA - Identity
anovadata2 <- na.omit(COMPLETEDDATA[, c("ResponseId", "Country", "VACCINEDEVELOPMENT",
                                        "DV_si_1", "DV_si_2")])

## ANOVA TESTS
anova_test(anovadata2, DV_si_1~VACCINEDEVELOPMENT*Country, wid = ResponseId, type = 3,
           effect.size = "pes")

anova_test(anovadata2, DV_si_2~VACCINEDEVELOPMENT*Country, wid = ResponseId, type = 3,
           effect.size = "pes")

## Tukey post-hoc tests
model3 <- lm(DV_si_1~VACCINEDEVELOPMENT*Country, data = anovadata2)
TukeyHSD(aov(model3), "Country", ordered = F)

model4 <- lm(DV_si_2~VACCINEDEVELOPMENT*Country, data = anovadata2)
TukeyHSD(aov(model4), "Country", ordered = F)

## Simple main effects
## National vaccine development 
anova_test(anovadata2[anovadata2$Country=="USA",], DV_si_1~VACCINEDEVELOPMENT,
           wid = ResponseId, type = 3, effect.size = "pes")
anova_test(anovadata2[anovadata2$Country=="China",], DV_si_1~VACCINEDEVELOPMENT,
           wid = ResponseId, type = 3, effect.size = "pes")
anova_test(anovadata2[anovadata2$Country=="Philippines",], DV_si_1~VACCINEDEVELOPMENT,
           wid = ResponseId, type = 3, effect.size = "pes")
## International vaccine development
anova_test(anovadata2[anovadata2$Country=="USA",], DV_si_2~VACCINEDEVELOPMENT,
           wid = ResponseId, type = 3, effect.size = "pes")
anova_test(anovadata2[anovadata2$Country=="China",], DV_si_2~VACCINEDEVELOPMENT,
           wid = ResponseId, type = 3, effect.size = "pes")
anova_test(anovadata2[anovadata2$Country=="Philippines",], DV_si_2~VACCINEDEVELOPMENT,
           wid = ResponseId, type = 3, effect.size = "pes")
```
